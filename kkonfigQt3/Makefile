#############################################################################
# Makefile for building: kkonfig
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Sat Jun 29 17:04:52 2024
# Project:  kkonfig.pro
# Template: app
# Command: $(QMAKE) -o Makefile kkonfig.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DLKC26 -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -O2  -DLKC26 -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/home/rikus/Programming/qt-x11-free-3.3.8b/mkspecs/linux-g++-64 -I. -I$(QTDIR)/include -I/usr/X11R6/include
LINK     = g++
LFLAGS   =  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib64 ../kconfig/zconf.tab.o -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = kkonfig.h \
		../nodes.h
SOURCES = kkonfig.cpp \
		../nodes.cpp
OBJECTS = kkonfig.o \
		nodes.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_kkonfig.cpp
OBJMOC = moc_kkonfig.o
DIST	   = kkonfig.pro
QMAKE_TARGET = kkonfig
DESTDIR  = 
TARGET   = kkonfig

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: kkonfig.pro  /home/rikus/Programming/qt-x11-free-3.3.8b/mkspecs/linux-g++-64/qmake.conf 
	$(QMAKE) -o Makefile kkonfig.pro
qmake: 
	@$(QMAKE) -o Makefile kkonfig.pro

dist: 
	@mkdir -p .tmp/kkonfig && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/kkonfig/ && ( cd `dirname .tmp/kkonfig` && $(TAR) kkonfig.tar kkonfig && $(GZIP) kkonfig.tar ) && $(MOVE) `dirname .tmp/kkonfig`/kkonfig.tar.gz . && $(DEL_FILE) -r .tmp/kkonfig

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

kkonfig.o: kkonfig.cpp kkonfig.h \
		../nodes.h

nodes.o: ../nodes.cpp ../nodes.h \
		../kconfig/lkc.h \
		../kconfig/expr.h \
		../kconfig/lkc_defs.h \
		../kconfig/lkc_proto.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodes.o ../nodes.cpp

moc_kkonfig.o: moc_kkonfig.cpp  kkonfig.h 

moc_kkonfig.cpp: $(MOC) kkonfig.h
	$(MOC) kkonfig.h -o moc_kkonfig.cpp

####### Install

install:  

uninstall:  

